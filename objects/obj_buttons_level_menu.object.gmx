<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.last_x = 0;
global.last_y = 0;

levelPage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewCenterX = (view_xview[0] + (view_wview[0]/2));
viewCenterY = (view_yview[0] + (view_hview[0]/2));

base_w = 320;
base_h = 480;
rate_w = window_get_width() / base_w;
rate_h = window_get_height() / base_h;

draw_set_color(c_black); //Set the color to black for our text
draw_set_halign(fa_center); //Center our text (horizontal)
draw_set_valign(fa_center); //Center our text (verticle)
draw_set_font(font_main);
draw_text_transformed(viewCenterX, 110, "Choose a level to start", global.fontratio, global.fontratio, 0); //Draw our button text

swipeDirection = SwipeCheck();

var i;
for(i = 0; i &lt; 15; i++) {
    showBtn[i] = false;
}
if (global.toplevel &gt;= 15) {
    for(i = 0; i &lt; 15; i++) {
        showBtn[i] = true;
    }
} 
else {
    for(i = 0; i &lt; global.toplevel; i++) {
        showBtn[i] = true;
    }
}
/*
showBtn[1] = true;
showBtn[2] = true;
showBtn[3] = true;
showBtn[4] = true;
showBtn[5] = true;
showBtn[6] = true;
showBtn[7] = true;
showBtn[8] = true;
showBtn[9] = true;
showBtn[10] = true;
showBtn[11] = true;
showBtn[12] = true;
showBtn[13] = true;
showBtn[14] = true;
*/

if((levelPage == 1) || (swipeDirection == 1 &amp;&amp; levelPage == 0 &amp;&amp; global.toplevel &gt; 15)) {
    levelPage = 1;
    
    for(i = global.toplevel - 16; i &lt; 5; i++) {
        showBtn[i] = true;
    }
    
    buttons[0] = level16;
    buttons[1] = level17;
    buttons[2] = level18;
    buttons[3] = level19;
    buttons[4] = level20;

    showBtn[5] = false;
    showBtn[6] = false;
    showBtn[7] = false;
    showBtn[8] = false;
    showBtn[9] = false;
    showBtn[10] = false;
    showBtn[11] = false;
    showBtn[12] = false;
    showBtn[13] = false;
    showBtn[14] = false;
    
    buttonText[0] = "16";
    buttonText[1] = "17";
    buttonText[2] = "18";
    buttonText[3] = "19";
    buttonText[4] = "20";
}
if((levelPage == 0) || (swipeDirection == -1 &amp;&amp; levelPage == 1)) {
    levelPage = 0;
    buttons[0] = level1;
    buttons[1] = level2;
    buttons[2] = level3;
    buttons[3] = level4;
    buttons[4] = level5;
    buttons[5] = level6;
    buttons[6] = level7;
    buttons[7] = level8;
    buttons[8] = level9;
    buttons[9] = level10;
    buttons[10] = level11;
    buttons[11] = level12;
    buttons[12] = level13;
    buttons[13] = level14;
    buttons[14] = level15;
    
    buttonText[0] = "1";
    buttonText[1] = "2";
    buttonText[2] = "3";
    buttonText[3] = "4";
    buttonText[4] = "5";
    buttonText[5] = "6";
    buttonText[6] = "7";
    buttonText[7] = "8";
    buttonText[8] = "9";
    buttonText[9] = "10";
    buttonText[10] = "11";
    buttonText[11] = "12";
    buttonText[12] = "13";
    buttonText[13] = "14";
    buttonText[14] = "15";
}

if(showBtn[0]) {
    if(Button(30, 50, 110, 110, buttonText[0])) {
        room_goto(buttons[0]);
    }
}
if(showBtn[1]) {
    if(Button(120, 50, 200, 110, buttonText[1])) {
        room_goto(buttons[1]);
    }
}
if(showBtn[2]) {
    if(Button(210, 50, 290, 110, buttonText[2])) {
        room_goto(buttons[2]);
    }
}
if(showBtn[3]) {
    if(Button(30, 120, 110, 180, buttonText[3])) {
        room_goto(buttons[3]);
    }
}
if(showBtn[4]) {
    if(Button(120, 120, 200, 180, buttonText[4])) {
        room_goto(buttons[4]);
    }
}
if(showBtn[5]) {
    if(Button(210, 120, 290, 180, buttonText[5])) {
        room_goto(buttons[5]);
    }
}
if(showBtn[6]) {
    if(Button(30, 190, 110, 250, buttonText[6])) {
        room_goto(buttons[6]);
    }
}
if(showBtn[7]) {
    if(Button(120, 190, 200, 250, buttonText[7])) {
        room_goto(buttons[7]);
    }
}
if(showBtn[8]) {
    if(Button(210, 190, 290, 250, buttonText[8])) {
        room_goto(buttons[8]);
    }
}
if(showBtn[9]) {
    if(Button(30, 260, 110, 320, buttonText[9])) {
        room_goto(buttons[9]);
    }
}
if(showBtn[10]) {
    if(Button(120, 260, 200, 320, buttonText[10])) {
        room_goto(buttons[10]);
    }
}
if(showBtn[11]) {
    if(Button(210, 260, 290, 320, buttonText[11])) {
        room_goto(buttons[11]);
    }
}
if(showBtn[12]) {
    if(Button(30, 330, 110, 390, buttonText[12])) {
        room_goto(buttons[12]);
    }
}
if(showBtn[13]) {
    if(Button(120, 330, 200, 390, buttonText[13])) {
        room_goto(buttons[13]);
    }
}
if(showBtn[14]) {
    if(Button(210, 330, 290, 390, buttonText[14])) {
        room_goto(buttons[14]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

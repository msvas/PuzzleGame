<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>levelStarted = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>base_w = 320;
base_h = 480;
rate_w = window_get_width() / base_w;
rate_h = window_get_height() / base_h;

if(levelStarted) {
    viewCenterX = (view_xview[0] + (view_wview[0]/2));
    viewCenterY = (view_yview[0] + (view_hview[0]/2));
    draw_sprite_ext(spr_panel1, -1, viewCenterX * global.rate_w, viewCenterY * global.rate_h, global.rate_w, global.rate_h, 0, c_white, 1);
    if(global.tutorial) {
        draw_sprite_ext(img_pirate_directions, -1, viewCenterX * global.rate_w, (viewCenterY - 15) * global.rate_h, global.rate_w, global.rate_h, 0, c_white, 1);
    }
    
    draw_set_color(c_black); //Set the color to black for our text
    draw_set_halign(fa_center); //Center our text (horizontal)
    draw_set_valign(fa_center); //Center our text (verticle)
    draw_set_font(font_main);
    draw_text_transformed((viewCenterX - 3) * global.rate_w, (viewCenterY - 70) * global.rate_h, "Welcome to level " + string(global.levelno) + "!", global.fontratio, global.fontratio, 0); //Draw our button text
    
    if(Button(viewCenterX - 60, viewCenterY + 30, viewCenterX + 60, viewCenterY + 70, "Start")) {
        global.started = true;
        levelStarted = false;
        mouse_clear(mb_any);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
